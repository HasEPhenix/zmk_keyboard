/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

//CONFIG_ZMK_SETTINGS_SAVE_DEBOUNCE=1000
//CONFIG_ZMK_RGB_UNDERGLOW_AUTO_OFF_IDLE=y
//CONFIG_ZMK_RGB_UNDERGLOW_AUTO_OFF_USB=y

&led_strip {
    chain-length = <28>;

    // chain-length = <28>;
    // 22 backlight + 6 glowlight
};

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&lt 3 TAB  &kp Q  &kp W  &kp E  &kp R         &kp T             &kp T                &kp POUND         &kp Y               &kp U        &kp I           &kp O      &kp P      &kp RIGHT_BRACKET
           &kp A  &kp S  &kp D  &kp F         &kp G             &lt 3 DELETE         &kp LEFT_BRACKET  &mt LEFT_CONTROL H  &mt LWIN I   &mt LEFT_ALT J  &kp K      &kp L
           &kp Y  &kp X  &kp C  &kp V         &kp B             &mt INSERT ESCAPE    &kp N             &kp N               &kp M        &kp DOT         &kp COMMA  &kp MINUS
                                &lt 1 RETURN  &mt LSHIFT SPACE  &lt 2 TAB            &lt LWR ESC       &kp BACKSPACE       &lt RSE DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3       &kp F4    &kp F5       &kp F6     &kp F7    &kp F8       &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3       &kp N4    &kp N5       &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &trans
                                          &lt ADJ TAB  &trans    &trans       &trans     &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM   &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &kp LA(TAB)  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans       &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                 &trans     &trans     &lt ADJ RET     &lt ADJ ESC   &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |OUTTG|     |SFTOFF|   |SFTOFF|     |OUTTG|     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |     | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       | LED+ | LED-|LED_M|LEDS+|LEDS-|     |     |     |     |     |     |     |      |
            //                          |     |     |     |     |     |     |     |

            bindings = <
&sys_reset  &bootloader     &none            &kp A            &out OUT_TOG     &none            &soft_off       &soft_off     &none         &out OUT_TOG  &none         &none         &bootloader  &sys_reset
            &bt BT_CLR      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &none           &none         &none         &none         &none         &none         &none
                                                              &bt BT_DISC 0    &kp A            &soft_off       &trans        &none         &trans
            >;
        };
    };
};
